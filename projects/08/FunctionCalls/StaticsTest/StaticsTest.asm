@256
D=A
@0
M=D
@RETURN_FLAG1
D=A
@SP
M=M+1
A=M-1
M=D
@0
D=A
@R1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(RETURN_FLAG1)
// function Class1.set 0
(Class1.set)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@16
D=A
@0
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@16
D=A
@1
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R11
M=D
@5
A=D-A
D=M
@R12
M=D
@ARG
D=M
@0
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
@ARG
D=M+1
@SP
M=D
@R11
A=M-1
D=M
@THAT
M=D
@R11
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R11
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R11
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R12
A=M
0;JMP
// function Class1.get 0
(Class1.get)
// push static 0
@0
D=A
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@1
D=A
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
// return
@LCL
D=M
@R11
M=D
@5
A=D-A
D=M
@R12
M=D
@ARG
D=M
@0
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
@ARG
D=M+1
@SP
M=D
@R11
A=M-1
D=M
@THAT
M=D
@R11
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R11
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R11
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R12
A=M
0;JMP
// function Class2.set 0
(Class2.set)
// push argument 0
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0
@16
D=A
@0
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
// push argument 1
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1
@16
D=A
@1
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R11
M=D
@5
A=D-A
D=M
@R12
M=D
@ARG
D=M
@0
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
@ARG
D=M+1
@SP
M=D
@R11
A=M-1
D=M
@THAT
M=D
@R11
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R11
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R11
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R12
A=M
0;JMP
// function Class2.get 0
(Class2.get)
// push static 0
@0
D=A
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1
@1
D=A
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
// return
@LCL
D=M
@R11
M=D
@5
A=D-A
D=M
@R12
M=D
@ARG
D=M
@0
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
@ARG
D=M+1
@SP
M=D
@R11
A=M-1
D=M
@THAT
M=D
@R11
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R11
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R11
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R12
A=M
0;JMP
// function Sys.init 0
(Sys.init)
// push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set 2
@RETURN_FLAG2
D=A
@SP
M=M+1
A=M-1
M=D
@0
D=A
@R1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(RETURN_FLAG2)
// pop temp 0
@R5
D=A
@0
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
// push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set 2
@RETURN_FLAG3
D=A
@SP
M=M+1
A=M-1
M=D
@0
D=A
@R1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(RETURN_FLAG3)
// pop temp 0
@R5
D=A
@0
D=D+A
@SP
A=M
M=D
A=A-1
D=M
A=A+1
A=M
M=D
@SP
M=M-1
// call Class1.get 0
@RETURN_FLAG4
D=A
@SP
M=M+1
A=M-1
M=D
@0
D=A
@R1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(RETURN_FLAG4)
// call Class2.get 0
@RETURN_FLAG5
D=A
@SP
M=M+1
A=M-1
M=D
@0
D=A
@R1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(RETURN_FLAG5)
// label WHILE
(WHILE)
// goto WHILE
@WHILE
0;JMP
